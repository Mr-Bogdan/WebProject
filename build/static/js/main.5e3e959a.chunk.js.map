{"version":3,"sources":["components/header.js","components/middlesection.js","components/task.js","components/tasks.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Header","showForm","closeText","className","onClick","style","backgroundColor","Middlesection","addTask","useState","text","setText","date","setDate","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Task","task","onDelete","onDoubleClick","id","Tasks","tasks","map","Footer","display","flexDirection","alignItems","paddingBottom","to","About","App","setTasks","setShowForm","useEffect","a","fetchTasks","tasksFromServer","getData","fetch","res","data","json","fetchTask","method","filter","taske","ToggleReminder","updatedTask","headers","body","JSON","stringify","path","exact","render","props","length","marginLeft","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e3e959a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Header = ({ showForm, closeText}) => {\r\n \r\n    \r\n    \r\n    return (\r\n        <div className=\"header\">\r\n           <h1 className=\"header-text\">Task Tracker</h1>\r\n           <button className=\"header-button\"\r\n            onClick={showForm}\r\n                \r\n            \r\n            \r\n            style={ { backgroundColor: closeText ? 'red' : 'green' }}>\r\n                {closeText ? 'Close' : 'Open'}</button> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { useState } from 'react';\r\n\r\n\r\n const Middlesection = ({addTask}) => {\r\n  \r\n   \r\n\r\n    \r\n    \r\n    const[text, setText] = useState('');\r\n    const[date, setDate] = useState('');\r\n    const[reminder, setReminder] = useState(false);\r\n   \r\n   \r\n\r\n   const onSubmit = (e) =>{\r\n        e.preventDefault();   \r\n\r\n        if(!text){\r\n            alert(\"Please enter text!\");\r\n            return\r\n        }\r\n       \r\n        addTask({text,date,reminder});\r\n        setText('');\r\n        setDate('');\r\n        setReminder(false);\r\n        \r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"middle-section\" >\r\n            <form onSubmit = {onSubmit} >\r\n                <div className=\"first-input\">\r\n                    <label >Task</label>\r\n                    <input type=\"text\" placeholder=\"Add task\"\r\n                     className=\"task-input\" \r\n                     value={text} onChange={(e) => setText(e.target.value)}/>\r\n                </div>\r\n                <div className=\"second-input\">\r\n                    <label>Day&Time</label>\r\n                    <input\r\n                     type=\"text\" placeholder=\"Add Day&Time\" \r\n                     className=\"date-time-input\" \r\n                     value={date}\r\n                    onChange={(e) => setDate(e.target.value)} />\r\n                </div>\r\n                <div className=\"reminder\">\r\n                    <p>Set Reminder</p>\r\n                    <input type=\"checkbox\" value={reminder} \r\n                    checked={reminder} \r\n                    onChange={(e)=>setReminder(e.currentTarget.checked)}/>\r\n                </div>\r\n                <div className=\"section-button\">\r\n                <button className=\"middle-button\">Save Task</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Middlesection ","import React from 'react'\r\nimport { FaRegTimesCircle } from 'react-icons/fa';\r\nconst Task = ({task, onDelete, setReminder}) => {\r\n    return (\r\n        <>\r\n           <div className={`main-block ${task.reminder ? 'main-reminder' : ''}`}\r\n            onDoubleClick={()=>setReminder(task.id)}>\r\n            <div className=\"top-block\">\r\n                <h3> {task.text}  </h3>\r\n                <FaRegTimesCircle \r\n                className=\"circle-icon\"\r\n                onClick={()=>onDelete(task.id)}/>\r\n            </div>\r\n            <p> {task.date}</p>\r\n        </div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './task';\r\n\r\nconst Tasks = ({tasks, onDelete, setReminder}) => {\r\n    \r\n    return (\r\n        <>\r\n       {tasks.map((task)=>(\r\n           <Task key={task.id} task={task}\r\n            onDelete={onDelete} setReminder={setReminder}/>\r\n       ))}\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer style={\r\n            {display:\"flex\",\r\n             flexDirection:\"column\",\r\n             alignItems:\"center\",\r\n             paddingBottom:\"10px\"}}>\r\n           <p>Copyright &copy; 2021</p>\r\n           <Link  to=\"/about\">About</Link> \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import {Link} from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n        <p>Version 1.0.0</p>\r\n        <Link to=\"/\">Go back</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import Header from './components/header'\nimport Middlesection from './components/middlesection'\nimport Tasks from './components/tasks'\nimport './main.css'\nimport { useState, useEffect } from 'react'\nimport Footer from './components/Footer'\nimport About from './components/About'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const [showForm, setShowForm] = useState(true);\n  \n  useEffect(() => {\n\n    const getData = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n\n  getData()\n\n\n  }, [])\n\n\n  const fetchTasks = async () =>{\n    const res = await fetch('http://localhost:5000/tasks')\n    \n    const data = res.json()\n    return data\n  \n  }\n\n\n  const fetchTask = async (id) =>{\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    \n    const data = res.json()\n    return data\n  \n  }\n\n\n\n\n  const onDelete = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method:'DELETE',\n    })\n\n    setTasks(tasks.filter((taske) => taske.id !== id));\n    \n    }\n  \n  const setReminder = async (id) => {\n    const ToggleReminder = await fetchTask(id)\n    const updatedTask = {...ToggleReminder, reminder: !ToggleReminder.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updatedTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: data.reminder} : task)\n    );\n  }\n  \n  const addTask = async (task) => {\n    const res = await fetch('http://localhost:5000/tasks',{\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n\n      const data = await res.json()\n      \n      setTasks([data, ...tasks])\n   \n    \n      \n    \n\n  }\n  \n\n  return (\n    <Router>\n    <div className=\"App\">\n     <Header \n     showForm = {()=>setShowForm(!showForm) }\n     closeText ={showForm}\n      addTask={addTask}\n     />\n    \n    <Route path='/' exact render={(props)=>(\n      <>\n {showForm ? <Middlesection addTask = {addTask} /> : ''} \n     {tasks.length> 0 ? <Tasks tasks={tasks} setReminder ={setReminder} onDelete={onDelete} /> : <h1 style={{marginLeft:\"100px\"}}>No tasks to show</h1>}\n      </>\n    )}/>\n    <Route path='/about' component={About}/>\n    <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}